{
  "head": {
    "title": "{{ProgLang}}를 사용하여 {{FileFormatUp}} 문서에 차트 생성하기",
    "description": "{{ProdFullName}} API는 개발자가 문서에 동적 차트나 그래프를 라이브 데이터로 원활하게 생성하고 삽입할 수 있도록 합니다."
  },
  "header": {
    "title": "{{EnvNameShort}} API로 {{FileFormatUp}} 문서에 차트 추가하기",
    "description": "{{ProdFullName}}은 실시간 데이터를 활용하여 {{FileFormatUp}} 문서에 차트를 통합하는 과정을 간소화합니다.",
    "subtitle": "{{ProdFullName}}",
    "action_title": "무료로 시작하기"
  },
  "about": {
    "title": "{{ProdFullName}} 소개",
    "content": "[{{ProdFullName}}]({{PlatformLink}})는 문서 및 보고서 생성을 자동화하기 위한 다목적 솔루션입니다. 차트, 테이블, 목록, 바코드 및 이미지를 파일에 직접 추가할 수 있으며, 정밀한 형식 지정 및 데이터 통합을 위한 고급 도구를 제공합니다. 이 플랫폼은 PDF, Microsoft Office 파일 및 이메일 등 50개 이상의 형식을 지원합니다."
  },
  "more_features": {
    "title": "문서에 동적 차트를 손쉽게 삽입하기",
    "description": "{{ProdFullName}}은 인기 있는 형식으로 데이터가 풍부한 문서를 구축하는 간편한 방법을 제공합니다. 템플릿을 사용하여 차트, 테이블, 바코드, 목록, 링크 및 이미지를 데이터의 동적 업데이트와 함께 삽입할 수 있습니다.",
    "image_description": "{{ProdShortName}}의 주요 기능",
    "feature_1": {
      "title": "데이터를 차트로 변환",
      "content": "API를 사용하여 JSON, XML, CSV 또는 기타 출처의 데이터를 문서용으로 깔끔하고 전문적인 차트로 변환합니다."
    },
    "feature_2": {
      "title": "시각적으로 임팩트 있는 콘텐츠 생성",
      "content": "{{ProdShortName}}은 바 그래프, 파이 차트, 선 그래프 등 다양한 시각적 형식을 지원하며, 테이블, 바코드, 이미지와 결합하여 향상된 보고서를 제공합니다."
    },
    "feature_3": {
      "title": "차트 배치 및 스타일 사용자 정의",
      "content": "LINQ 기반의 문법을 통해 문서 내에서 동적으로 차트를 생성하고 배치할 수 있으며, 디자인 요구에 맞게 스타일, 색상 및 레이아웃을 쉽게 조정할 수 있습니다."
    },
    "feature_4": {
      "title": "다양한 문서 형식 지원",
      "content": "MS Office, PDF, OpenOffice, HTML 등의 형식으로 문서를 생성하십시오. 차트는 모든 지원 형식에 원활하게 통합되어 전문적인 결과를 제공합니다."
    }
  },
  "formats": {
    "title": "다양한 형식으로 포괄적인 보고서 생성",
    "description": "{{EnvName}}는 50개 이상의 파일 형식에 걸쳐 통합된 차트가 포함된 문서를 생성할 수 있도록 하여 템플릿과 데이터의 원활한 병합을 보장합니다."
  },
  "operations": {
    "title": "강력한 기능 탐색",
    "description": "이 플랫폼은 데이터 중심의 시각적으로 매력적인 문서를 설계하는 과정을 간소화합니다."
  },
  "examples": {
    "comment_1": "차트를 포함하려면 템플릿에 이 태그를 추가하세요.",
    "comment_2": "템플릿의 파일 경로를 제공합니다.",
    "comment_3": "소스에서 필요한 데이터를 추출합니다.",
    "comment_4": "차트가 포함된 최종 문서를 저장합니다."
  },
  "steps": {
    "title": "{{FileFormatUp}} 문서에 차트를 삽입하는 단계",
    "content": {
      "title": "[{{ProdShortName}}]({{PlatformLink}})은 {{FileFormatUp}} 템플릿에 차트를 삽입하는 과정을 간소화합니다. 바, 파이 및 선 그래프 등 다양한 차트 스타일 중에서 선택하십시오.",
      "step_1": "{{FileFormatUp}} 템플릿을 생성하되 차트를 위한 자리 표시자를 포함합니다.",
      "step_2": "호환 가능한 출처에서 데이터를 로드합니다.",
      "step_3": "차트 옵션(유형, 레이블, 색상 등)을 설정합니다.",
      "step_4": "차트가 포함된 문서를 저장합니다."
    }
  },
  "code_1": {
    "title": "프로그래밍적으로 차트를 생성하고 삽입하기",
    "content": "이 예제에서는 차트를 {{FileFormatUp}} 문서에 프로그램matically 생성하고 삽입하는 방법을 보여줍니다.",
    "comment_1": "차트를 위한 자리 표시자가 있는 템플릿을 준비합니다.",
    "comment_2": "템플릿의 파일 경로를 지정합니다.",
    "comment_3": "선택한 출처에서 데이터를 로드합니다.",
    "comment_4": "관련 정보를 포함한 데이터 개체를 생성합니다.",
    "comment_5": "차트의 유형 및 모양을 구성합니다.",
    "comment_6": "{{DocumentAssembler}} 초기화합니다.",
    "comment_7": "차트가 삽입된 완료된 문서를 저장합니다."
  },
  "texts_pdf": {
    "step_1": "차트를 위한 자리 표시자를 포함한 템플릿을 생성합니다 (PDF 템플릿은 지원되지 않음).",
    "step_4": "차트가 포함된 문서를 PDF 파일로 저장합니다.",
    "comment_tmp": "현재 PDF 템플릿은 지원되지 않습니다."
  }
}